@using System.Security.Claims
@inherits LayoutComponentBase

@inject ILocalStorageService _localStorageService;
@inject NavigationManager _navigationManager;

<RadzenDialog />
<RadzenContextMenu />
<RadzenNotification />
<RadzenTooltip />

<RadzenLayout>
    @* <RadzenHeader></RadzenHeader> *@
    <RadzenSidebar>
        <div class="rz-p-4">
            <NavMenu />
        </div>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
    @*  <RadzenFooter>
    </RadzenFooter> *@
</RadzenLayout>
@code
{
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService{ get; set; }

    private string loginStr = "about";

    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationState;
        if (authState.User.Identity.IsAuthenticated)
        {
            // authState.User.Claims.FirstOrDefault(i => i.ValueType == ClaimTypes.Email);
            loginStr = await _localStorageService.GetItemAsStringAsync("email");
        }
        else
        {
            _navigationManager.NavigateTo("/login");
        }
    }
}
